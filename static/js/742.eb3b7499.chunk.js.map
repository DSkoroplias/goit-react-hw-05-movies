{"version":3,"file":"static/js/742.eb3b7499.chunk.js","mappings":"sPACA,GAAgB,SAAW,6B,SC0C3B,EApCiB,WACf,OAAyBA,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAERE,QAAQC,IAAIL,IAEZM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEIC,EAAAA,EAAAA,IAAoBN,GAFxB,OAETO,EAFS,OAGfR,EAASQ,GAHM,gDAINC,EAJM,KAINA,SACTN,QAAQC,IAAIK,EAASD,KAAKE,SALX,yDAAH,qDAQhBJ,GACD,GAAE,CAACL,IAEJ,IAAMU,EAAUZ,EAAKa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACvB,2BACE,gBACEC,UAAWC,EAAAA,kBACXC,IAAG,yCAAoCH,GACvCI,IAAI,iBAEN,uBAAIL,MANGZ,EADc,IAWzB,OACE,iCACE,wBAAwB,IAAnBU,EAAQQ,OAAe,yBAA2BR,IADzD,MAIH,C,sLCvCKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAkB,mCAAG,sGACTL,EAASM,IAAI,uBADJ,uBACxBlB,EADwB,EACxBA,KADwB,kBAGzBA,GAHyB,2CAAH,qDAMlBmB,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOD,KAHc,uBACjBpB,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXsB,EAAY,mCAAG,WAAM7B,GAAN,yFACHmB,EAASM,IAAT,iBAAuBzB,IADpB,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAmB,mCAAG,WAAMN,GAAN,yFACVmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADU,uBACzBO,EADyB,EACzBA,KADyB,kBAE1BA,EAAKT,MAFqB,2CAAH,sDAKnBgC,EAAmB,mCAAG,WAAM9B,GAAN,yFACVmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADU,uBACzBO,EADyB,EACzBA,KADyB,kBAE1BA,EAAKwB,SAFqB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/page/CastPage/cast-page.module.scss?9af0","page/CastPage/CastPage.jsx","shared/services/posts-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"cast-page_comments__rd8RJ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCreditsByMovieId } from '../../shared/services/posts-api';\n\nimport styles from './cast-page.module.scss';\n\nconst CastPage = () => {\n  const [cast, setCasts] = useState([]);\n  const { id } = useParams();\n\n  console.log(cast);\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      try {\n        const data = await getCreditsByMovieId(id);\n        setCasts(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchCasts();\n  }, [id]);\n\n  const element = cast.map(({ id, name, profile_path }) => (\n    <li key={id}>\n      <img\n        className={styles.galleryItem_image}\n        src={`https://image.tmdb.org/t/p/w92/${profile_path}`}\n        alt=\"poster_path\"\n      />\n      <p>{name}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul>{element.length === 0 ? \"We don't have any foto\" : element}</ul>;\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e59553b70fe2fa353c5474cefb89bc6e',\n  },\n});\n\nexport const TradingTodaySearch = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const SearchMovie = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsByMovieId = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCasts","id","useParams","console","log","useEffect","fetchCasts","getCreditsByMovieId","data","response","message","element","map","name","profile_path","className","styles","src","alt","length","instance","axios","baseURL","params","api_key","TradingTodaySearch","get","SearchMovie","search","query","getMovieById","getReviewsByMovieId","results"],"sourceRoot":""}