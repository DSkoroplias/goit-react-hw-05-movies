{"version":3,"file":"static/js/824.3d743bd2.chunk.js","mappings":"sPACA,EAAuB,2B,SCyCvB,EAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAoBJ,GAFtB,OAEXK,EAFW,OAGjBN,EAAWM,GAHM,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALT,yDAAH,qDAQlBN,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAUZ,EAAQa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC1B,2BACE,wBAAKD,KACL,uBAAIC,MAFGb,EADiB,IAO5B,OACE,iCACE,eAAIc,UAAWC,EAAf,SACsB,IAAnBL,EAAQM,OACL,2CACAN,IAJR,MASH,C,sLCtCKO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAkB,mCAAG,sGACTL,EAASM,IAAI,uBADJ,uBACxBlB,EADwB,EACxBA,KADwB,kBAGzBA,GAHyB,2CAAH,qDAMlBmB,EAAW,mCAAG,WAAMC,GAAN,yFACFR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAOD,KAHc,uBACjBpB,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASXsB,EAAY,mCAAG,WAAM3B,GAAN,yFACHiB,EAASM,IAAT,iBAAuBvB,IADpB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZuB,EAAmB,mCAAG,WAAM5B,GAAN,yFACViB,EAASM,IAAT,iBAAuBvB,EAAvB,aADU,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,EAAKwB,MAFqB,2CAAH,sDAKnBzB,EAAmB,mCAAG,WAAMJ,GAAN,yFACViB,EAASM,IAAT,iBAAuBvB,EAAvB,aADU,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,EAAKyB,SAFqB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/page/ReviewsPage/reviews-page.module.scss?12af","page/ReviewsPage/ReviewsPage.jsx","shared/services/posts-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews-page_list__cwLiS\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewsByMovieId } from 'shared/services/posts-api';\n\nimport styles from './reviews-page.module.scss';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviewsByMovieId(id);\n        setReviews(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const element = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {element.length === 0\n          ? \"We don't have any reviews for this movie\"\n          : element}\n      </ul>\n      ;\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e59553b70fe2fa353c5474cefb89bc6e',\n  },\n});\n\nexport const TradingTodaySearch = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const SearchMovie = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: search,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCreditsByMovieId = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getReviewsByMovieId","data","response","console","log","message","element","map","author","content","className","styles","length","instance","axios","baseURL","params","api_key","TradingTodaySearch","get","SearchMovie","search","query","getMovieById","getCreditsByMovieId","cast","results"],"sourceRoot":""}